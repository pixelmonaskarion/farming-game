# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import farmServerMethods_pb2 as farmServerMethods__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FarmingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMap = channel.unary_unary(
                '/farming.Farming/GetMap',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=farmServerMethods__pb2.Map.FromString,
                )
        self.GetItems = channel.unary_unary(
                '/farming.Farming/GetItems',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=farmServerMethods__pb2.Items.FromString,
                )
        self.changeStuff = channel.stream_stream(
                '/farming.Farming/changeStuff',
                request_serializer=farmServerMethods__pb2.MapUpdate.SerializeToString,
                response_deserializer=farmServerMethods__pb2.Map.FromString,
                )


class FarmingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeStuff(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FarmingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=farmServerMethods__pb2.Map.SerializeToString,
            ),
            'GetItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItems,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=farmServerMethods__pb2.Items.SerializeToString,
            ),
            'changeStuff': grpc.stream_stream_rpc_method_handler(
                    servicer.changeStuff,
                    request_deserializer=farmServerMethods__pb2.MapUpdate.FromString,
                    response_serializer=farmServerMethods__pb2.Map.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'farming.Farming', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Farming(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farming.Farming/GetMap',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            farmServerMethods__pb2.Map.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farming.Farming/GetItems',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            farmServerMethods__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def changeStuff(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/farming.Farming/changeStuff',
            farmServerMethods__pb2.MapUpdate.SerializeToString,
            farmServerMethods__pb2.Map.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
